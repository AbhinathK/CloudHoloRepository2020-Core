openapi: '3.0.2'

info:
  version: 1.0.0
  title: HoloStorage Accessor API
  description: APIs to access the FHIR resources and 3D models from HoloStorage

servers:
  - url: http://holostorage.azurewebsites.net/v1/

paths:
  /patients:
    get:
      summary: Get patient's metadata based on search parameters

      description: Obtain patient's information stored within HoloStorage, FHIR metadata and number of Holograms associated with the patients
      parameters:
        - in: query
          name: pid
          description: ID of patient to return
          schema:
            $ref: '#/components/schemas/UUID'

      responses:
        200:
          description: Successful pulling of patients metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
        400:
          description: Unaccepted input
        404:
          description: Failure to find all patients' metadata

# Download Holograms via Hologram ID(s)
# Get Holograms Metadata via Patients ID(s)
# Get Holograms Metadata via Hologram ID(s)
# Delete Holograms via Hologram ID(s)
# Annotations operations (POST/PUT/DELETE)

  /patients/{id}:
    put:
      summary: Add/Update patient information
      parameters:
        - in: path
          name: id
          required: true
          description: ID of patient to put into HoloStorage
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        200:
          description: Successful modification
        201:
          description: Successful created
        400:
          description: Unaccepted input

  /holograms:
    get:
      summary: 'Get holograms metadata based on hologram ids'
      description: 'Obtain hologram information stored within HoloStorage, FHIR metadata and number of Holograms associated with the patients'
      parameters:
        - in: query
          name: id
          description: ID of hologram to return
          schema:
            $ref: '#/components/schemas/UUID'

      responses:
        200:
          description: Successfully found all hologram metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holograms'
        400:
          description: Unaccepted input
        404:
          description: Metadata of holograms were not found

    post:
      summary: 'Upload hologram to HoloStorage'
      description: 'Hologram and associated metadata to be uploaded onto HoloStorage. The UUID will be generated automatically by the accessor'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HologramUploadData'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The UUID of the uploaded hologram
                    example: 32853d69-3e71-4c87-abf9-56f0eddefefc
        400:
          description: Unaccepted input

  /holograms/patients:
    get:
      summary: 'Get holograms metadata based on search parameters'
      description: 'Obtain hologram information stored within HoloStorage, FHIR metadata and number of Holograms associated with the patients'
      parameters:
        - in: query
          name: id
          description: ID of hologram to return
          schema:
            $ref: '#/components/schemas/UUID'

      responses:
        200:
          description: Successfully found all hologram metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holograms'
        400:
          description: Unaccepted input
        404:
          description: Metadata of holograms were not found

  /content:
    get:
      summary: Download holograms based on id
      parameters:
        - in: query
          name: id
          description: ID of hologram to download
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        200:
          description: Zipped file containing multiple holograms or uncompressed of single hologram
          content:
            application/zip:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        404:
          description: Not all hologram ids are found

  /holograms/{id}/annotations:
    get:
      summary: Get all annotations associated with a hologram
      parameters:
        - in: path
          name: id
          required: true
          description: ID of hologram to get annotation information
          schema:
            type: string
      responses:
        200:
          description: Success
          # TODO: Contents of annotations
        400:
          description: Unaccepted input
        404:
          description: Hologram ID is not found

components:
  schemas:
    PersonName:
      description: Components that make up the name of the
      properties:
        full:
          type: string
          example: Jens Krinke
        title:
          type: string
          example: Dr
        given:
          type: string
          example: Jens
        family:
          type: string
          example: Krinke

    UUID:
      title: Resource UUID
      description: The UUID assigned to the specific requested resource (e.g. Patient, Hologram)
      example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
      type: string
      format: uuid

    Patients:
      description: An array of patients metadata
      type: array
      items:
        $ref: '#/components/schemas/Patient'

    Patient:
      title: Patient
      description: Metadata of a single patient
      type: object
      properties:
        id:
          type: string
          example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
        name:
          $ref: '#/components/schemas/PersonName'
        gender:
          type: string
          example: male
          enum: [male, female, unknown, other]
        birthDate:
          type: string
          format: date

    Holograms:
      description: An array of hologram metadata
      type: array
      items:
        $ref: '#/components/schemas/Hologram'

    Hologram:
      description: Metadata of a hologram
      type: object
      properties:
        id:
          type: string
          example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
        title:
          type: string
          example: Malformed hip bones
        patient:
          $ref: '#/components/schemas/Patient'
        author:
          $ref: '#/components/schemas/Author'
        description:
          type: string
          example: Malformed hip bones on a 8 year old child
        creation:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        contentType:
          type: string
          example: application/octet-stream
        size:
          type: integer
          example: 5120

    HologramUploadData:
      description: Components required to upload a new Hologram
      type: object
      properties:
        title:
          type: string
          example: Malformed hip bones
        patient:
          $ref: '#/components/schemas/Patient'
        author:
          $ref: '#/components/schemas/Author'
        description:
          type: string
          example: Malformed hip bones on a 8 year old child
        hologramFile:
          type: string
          format: binary

    Author:
      title: Author
      description: Who and/or what authored the Hologram
      type: object
      properties:
        id:
          type: string
          example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
        name:
          $ref: '#/components/schemas/PersonName'