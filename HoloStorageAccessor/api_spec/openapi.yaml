openapi: 3.0.2
info:
  version: "0.1.2"
  title: 'HoloStorage Accessor API'
  description: 'API to access holograms and metadata from HoloStorage'

# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/boonwj/HoloRepository/0.1.0

paths:
# Download Holograms via Hologram ID(s) - GET /models
# Get Holograms Metadata via Patients ID(s) - GET /patients
# Get Holograms Metadata via Hologram ID(s) - GET /holograms
# Delete Holograms via Hologram ID(s) - DELETE /holograms
# Annotations operations - (TODO POST/PUT/DELETE)
  /patients:
    get:
      summary: Mass query for patients metadata in HoloStorage
      parameters:
        - $ref: '#/components/parameters/PIDQuery'

      responses:
        200:
          description: Successful pulling of patients metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
        400:
          description: Unaccepted input

  /patients/{pid}:
    get:
      summary: Get a single patient metadata in HoloStorage
      parameters:
        - $ref: '#/components/parameters/PIDPath'
      responses:
        200:
          description: Successful pulling of patients metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        400:
          description: Unaccepted input
        404:
          description: Patient cannot be found

    put:
      summary: Add or update basic patient information
      description: |-
        This endpoint allows you to add new patient information in HoloStorage. If PID does not exist,  a new Patient will be created else, it will be updated.

        PID in path and request body will be checked as a means to ensure that the insertion is intended.
      parameters:
        - $ref: '#/components/parameters/PIDPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientBasic'
      responses:
        200:
          description: Successful modification
        201:
          description: Successful created
        400:
          description: Unaccepted input

  /holograms:
    get:
      summary: Mass queries for hologram metadata based on hologram ids
      description: 'Obtain hologram information stored within HoloStorage, FHIR metadata and number of Holograms associated with the patients'
      parameters:
        - $ref: '#/components/parameters/HIDQuery'

      responses:
        200:
          description: Successfully found all hologram metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holograms'
        400:
          description: Unaccepted input
        404:
          description: Metadata of holograms were not found

    post:
      summary: 'Upload hologram to HoloStorage'
      description: 'Hologram and associated metadata to be uploaded onto HoloStorage. The UUID will be generated automatically by the accessor'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HologramUploadData'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The UUID of the uploaded hologram
                    example: 32853d69-3e71-4c87-abf9-56f0eddefefc
        400:
          description: Unaccepted input

  /holograms/{hid}:
    get:
      summary: 'Get a single hologram metadata based hologram ids'
      description: 'Obtain hologram information stored within HoloStorage, FHIR metadata and number of Holograms associated with the patients'
      parameters:
        - $ref: '#/components/parameters/HIDPath'

      responses:
        200:
          description: Successfully found all hologram metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holograms'
        400:
          description: Unaccepted input
        404:
          description: Metadata of holograms were not found

    delete:
      summary: 'Delete hologram in HoloStorage'
      description: 'Delete holograms based on ID'
      parameters:
        - $ref: '#/components/parameters/HIDPath'
      responses:
        200:
          description: Successful deletion
        404:
          description: Hologram cannot be located for deletion
        500:
          description: Errors during deletion process



  /holograms/{hid}/download:
    get:
      summary: Download holograms models based on id
      parameters:
        - $ref: '#/components/parameters/HIDPath'
      responses:
        200:
          description: Download a single hologram based on id
          content:
            model/gltf-binary:
              schema:
                type: string
                format: binary
        404:
          description: Hologram id is not found

  # /holograms/{hid}/annotations:
  #   get:
  #     summary: Get all annotations associated with a hologram
  #     parameters:
  #       - in: path
  #         name: hid
  #         required: true
  #         description: ID of hologram to get annotation information
  #         schema:
  #           type: string
  #     responses:
  #       200:
  #         description: Success
  #         # TODO: Contents of annotations
  #       400:
  #         description: Unaccepted input
  #       404:
  #         description: Hologram ID is not found

components:
  parameters:
    PIDQuery:
      in: query
      name: pid
      required: true
      schema:
        type: string
        format: uuid
        example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
      description: The UUID assigned to the specific patient

    PIDPath:
      in: path
      name: pid
      required: true
      schema:
        type: string
        format: uuid
        example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
      description: The UUID assigned to the specific patient

    HIDQuery:
      in: query
      name: hid
      required: true
      schema:
        type: string
        format: uuid
        example: abcdef12-3456-7890-ccbb-eeffaabbcc
      description: The UUID assigned to a hologram

    HIDPath:
      in: path
      name: hid
      required: true
      schema:
        type: string
        format: uuid
        example: abcdef12-3456-7890-ccbb-eeffaabbcc
      description: The UUID assigned to a hologram

  schemas:
    PersonName:
      description: Components that make up the name of the
      properties:
        full:
          type: string
          example: Marvin Portebello
        title:
          type: string
          example: Mr
        given:
          type: string
          example: Marvin
        family:
          type: string
          example: Portebello

    Patients:
      description: An array of patients metadata
      type: array
      items:
        $ref: '#/components/schemas/Patient'

    Patient:
      title: Full Patient Info
      description: Metadata of a single patient
      allOf:
        - $ref: '#/components/schemas/PatientBasic'
        - type: object
          properties:
            holograms:
              $ref: '#/components/schemas/Holograms'

    PatientBasic:
      title: Basic Patient Info
      type: object
      properties:
        id:
          type: string
          example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
        name:
          $ref: '#/components/schemas/PersonName'
        gender:
          type: string
          example: male
          enum: [male, female, unknown, other]
        birthDate:
          type: string
          format: date

    Holograms:
      description: An array of hologram metadata
      type: array
      items:
        $ref: '#/components/schemas/Hologram'

    Hologram:
      description: Metadata of a hologram
      type: object
      properties:
        id:
          type: string
          example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
        title:
          type: string
          example: Malformed hip bones
        patient:
          type: object
          properties:
            pid:
              type: string
              format: uuid
            name:
              $ref: '#/components/schemas/PersonName'
        author:
          $ref: '#/components/schemas/Author'
        description:
          type: string
          example: Malformed hip bones on a 8 year old child
        creation:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        contentType:
          type: string
          example: model/gltf-binary
        size:
          type: integer
          example: 5120

    HologramUploadData:
      description: Components required to upload a new Hologram
      type: object
      properties:
        title:
          type: string
          example: Malformed hip bones
        patient:
          $ref: '#/components/schemas/Patient'
        author:
          $ref: '#/components/schemas/Author'
        description:
          type: string
          example: Malformed hip bones on a 8 year old child
        hologramFile:
          type: string
          format: binary

    Author:
      title: Author
      description: Who and/or what authored the Hologram
      type: object
      properties:
        id:
          type: string
          example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673
        name:
          $ref: '#/components/schemas/PersonName'
